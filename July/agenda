####
using Pranav's data to look at perturbations for different concepts
qualify via ChatGPT

Scaling:

####
Next orders of business:
-Better QA dataset--with user prompt and response and then look at final token
-Repeat for multi-word perturbations
-Repeat last token work with interpolation between manifold centroids and same for word manifolds + try other tokens?


####
Papers: train meta-meta-SAE on same data as Nanda paper; see if you keep getting more atomic features. I am quite sure concepts will circle back on themselves--more/less "atomic" is only defined with respect to one use. Language is not semantically well-ordered.


####
Speculative: What happens when you prompt an LLM during inference to learn a new language of your syntactical design? How are the components of this synthetic simple language represented? Or, simpler, how differently are languages represented? Is it just some orthogonal vector indicating language or does syntax mess up more?


####
Concerns about current experiments:
-artificial labelling of concepts pre-constrain shwo we interpret representations
-the user prompt is two sentences but all prompts.json are one.
-should we pass system prompt through when we define the manifolds as well?
-since we filter prompts.json for wordToken.py, we end up with ~half the number of prompts for manifold generation as we have for lastToken.py
-how do we deal with the system/padding tokens we we generate the manifold

####
Pre-discarded ideas:
-Repeat wordToken for multi-word perturbations
-Classification task: give features and model predicts animal; then ablate PCs to see if this leads to ignorance of feature (e.g. classifies horse features where "mane" is dropped as dog)
